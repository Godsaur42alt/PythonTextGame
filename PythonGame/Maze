from random import shuffle, randrange

maze=[]
path=[]

def make_maze(w = 16, h = 8):
    global maze
    maze=[]
    vis = [[0] * w + [1] for _ in range(h)] + [[1] * (w + 1)]
    ver = [["|  "] * w + ['|'] for _ in range(h)] + [[]]
    hor = [["+--"] * w + ['+'] for _ in range(h + 1)]
    print(len(hor))
    print(len(ver))

    def walk(x, y):
        vis[y][x] = 1

        d = [(x - 1, y), (x, y + 1), (x + 1, y), (x, y - 1)]
        shuffle(d)
        for (xx, yy) in d:
            
            if vis[yy][xx]:
                continue
            if xx == x:
                hor[max(y, yy)][x] = "+  "
            if yy == y:
                ver[y][max(x, xx)] = "   "
            walk(xx, yy)
            
    walk(randrange(w), randrange(h))
    # print(hor)
    # print(ver)
    maze.append(hor)
    maze.append(ver)
    # print(vis)
    return maze
    

def cordifiy():
    global maze,mazecord
    mazecord=[]
    mazer=[]
    hor=maze[0]
    ver=maze[1]
    count=0
    x=(len(hor)*2)-1
    
    for i in range(17):
        if count!=0:
            count=0
        elif count!=1:
            count=1
        for row in maze[count]:
            hr=[]
            for wall in row:
                if wall=="+--" or wall=="|  " or wall=="+":
                    hr.append(0)
                elif wall=="+  " or wall=="   ":
                    if count==0:
                        hr.append(1)
                    elif count==1:
                        hr.append(2)
            mazecord.append(hr)
            

def print_maze():
    global maze
    for (a, b) in zip(maze[0], maze[1]):
        print(''.join(a + ['\n'] + b))
        
make_maze()
cordifiy()
print(mazecord)
print(len(mazecord))
print_maze()
# input()
# print_maze()
# input()
# maze[1][0][1]="@"
# print_maze()
